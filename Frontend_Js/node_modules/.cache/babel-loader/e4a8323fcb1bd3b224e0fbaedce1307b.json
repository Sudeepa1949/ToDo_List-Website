{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Downloads\\\\to-do-list-spring-boot-react-master\\\\to-do-list-spring-boot-react-master\\\\frontend\\\\src\\\\components\\\\todo\\\\UpdateTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useHistory } from \"react-router-dom\";\n\nfunction UpdateTodo({\n  isAuthenticated,\n  setIsAuthenticated,\n  match\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [targetDate, setTargetDate] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  let history = useHistory();\n  useEffect(() => {\n    if (!isAuthenticated) {\n      history.push(\"/\");\n    }\n  }, [isAuthenticated, history]);\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.put(`http://localhost:3001/api/todo/${match.params.id}`, {\n        title,\n        targetDate\n      }, {\n        headers: {\n          'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n    } catch (error) {\n      setMessage('');\n\n      if (error.response) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('Error: something happened');\n      }\n\n      return;\n    }\n\n    setErrorMessage('');\n    setMessage('Todo successfully updated');\n    await timeout(1000);\n    history.push(\"/todo\");\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      let response = null;\n\n      try {\n        response = await axios.get(`http://localhost:3001/api/todo/${match.params.id}`, {\n          headers: {\n            'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n          }\n        });\n      } catch (error) {\n        setMessage('');\n\n        if (error.response) {\n          setErrorMessage(error.response.data.message);\n        } else {\n          setErrorMessage('Error: something happened');\n        }\n\n        return;\n      }\n\n      setErrorMessage('');\n      setTitle(response.data.title);\n      setTargetDate(moment(response.data.targetDate).format('YYYY-MM-DD'));\n    };\n\n    loadData();\n  }, [match.params.id]);\n  useEffect(() => {\n    setMessage('');\n  }, [title, targetDate]);\n\n  const showMessage = () => {\n    if (message === '') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  };\n\n  const showErrorMessage = () => {\n    if (errorMessage === '') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Target Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: targetDate,\n          type: \"date\",\n          onChange: e => setTargetDate(e.target.value),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Update Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), showMessage(), showErrorMessage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n}\n\n_s(UpdateTodo, \"u3GacrJXxz8QSjJaMnaKtIPevdY=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateTodo;\nexport default UpdateTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTodo\");","map":{"version":3,"sources":["C:/Users/Dell/Downloads/to-do-list-spring-boot-react-master/to-do-list-spring-boot-react-master/frontend/src/components/todo/UpdateTodo.js"],"names":["React","useEffect","useState","axios","moment","useHistory","UpdateTodo","isAuthenticated","setIsAuthenticated","match","title","setTitle","targetDate","setTargetDate","message","setMessage","errorMessage","setErrorMessage","history","push","timeout","delay","Promise","res","setTimeout","onSubmit","e","preventDefault","put","params","id","headers","sessionStorage","getItem","error","response","data","loadData","get","format","showMessage","showErrorMessage","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { useHistory } from \"react-router-dom\"; \n\nfunction UpdateTodo({isAuthenticated, setIsAuthenticated, match}) {\n\tconst [title, setTitle] = useState('');\n  const [targetDate, setTargetDate] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  let history = useHistory();\n\n  useEffect(() => {\n\t\tif(!isAuthenticated){\n\t\t\thistory.push(\"/\");\n\t\t}\n\t}, [isAuthenticated, history])\n\n  function timeout(delay) {\n    return new Promise( res => setTimeout(res, delay) );\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n  \n    try {\n      await axios.put(`http://localhost:3001/api/todo/${match.params.id}`, {title, targetDate}, {\n        headers: {\n          'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n    } catch(error){\n      setMessage('');\n      if (error.response) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('Error: something happened');\n      }\n      return;\n    }\n\n    setErrorMessage('');\n    setMessage('Todo successfully updated');\n    await timeout(1000);\n    history.push(\"/todo\");\n  }\n\n  useEffect(() => {\n    const loadData = async () => {\n      let response = null;\n      try {\n        response = await axios.get(`http://localhost:3001/api/todo/${match.params.id}`, {\n          headers: {\n\t\t\t\t\t\t'Authorization': `Bearer ${sessionStorage.getItem('token')}`\n\t\t\t\t\t}\n        });\n      } catch(error){\n        setMessage('');\n        if (error.response) {\n          setErrorMessage(error.response.data.message);\n        } else {\n          setErrorMessage('Error: something happened');\n        }\n        return;\n      }\n      setErrorMessage('');\n      setTitle(response.data.title);\n      setTargetDate(moment(response.data.targetDate).format('YYYY-MM-DD'));\n    }\n    \n\t\tloadData();\n  }, [match.params.id]);\n\n  useEffect(() => {\n    setMessage('')\n  }, [title, targetDate])\n  \n  const showMessage = () => {\n    if(message === ''){\n      return <div></div>\n    }\n    return <div className=\"alert alert-success\" role=\"alert\">\n      {message}\n    </div> \n  }\n\n  const showErrorMessage = () => {\n    if(errorMessage === ''){\n      return <div></div>\n    }\n\n    return <div className=\"alert alert-danger\" role=\"alert\">\n      {errorMessage}\n    </div>\n  }\n\n\treturn (\n\t\t<div className=\"container\">\n      <form onSubmit={onSubmit}>\n        <h1>Update Todo</h1>\n        <div className=\"form-group\">\n          <label>Title</label>\n          <input \n            value={title} \n            onChange={e => setTitle(e.target.value)} \n            className=\"form-control\">\n          </input>\n        </div>\n        <div className=\"form-group\">\n          <label>Target Date</label>\n          <input \n            value={targetDate} \n            type=\"date\" \n            onChange={e => setTargetDate(e.target.value)} \n            className=\"form-control\">\n          </input>\n        </div>\n        <button className=\"btn btn-primary\">Update Todo</button>\n      </form>\n      {showMessage()}\n      {showErrorMessage()}\n    </div>\n\t)\n}\n\nexport default UpdateTodo;"]},"metadata":{},"sourceType":"module"}